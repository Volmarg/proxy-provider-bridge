services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    ProxyProviderBridge\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    ProxyProviderBridge\Service\BridgeService:
        arguments:
            $logFilePath: "%proxy_provider.log.file_path%"
            $loggerName: "%proxy_provider.log.name%"
            $baseUrl: '%proxy_provider.base_url%'
